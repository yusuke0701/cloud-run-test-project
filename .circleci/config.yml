version: 2.1

orbs:
    gcp-cli: circleci/gcp-cli@1.8.3

executors:
    go-executor:
        working_directory: ~/app
        docker:
            - image: circleci/golang:1.13
        resource_class: small
    gcloud-executor:
        working_directory: ~/app
        docker:
            - image: "google/cloud-sdk:latest"
        resource_class: small

jobs:
    lint:
        executor: go-executor
        parameters:
            cache_key:
                type: string
            cache_version:
                type: string
            working_dir:
                type: string
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - << parameters.cache_key >>
                      - << parameters.cache_version >>
            - run:
                  name: download go modules
                  command: go mod download
                  working_directory: << parameters.working_dir >>
            - save_cache:
                  key: << parameters.cache_key >>
                  paths:
                      - /go/pkg/mod
            - run:
                  name: Install GolangCI-Lint
                  command: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.26.0
            - run:
                  name: Run GolangCI-Lint
                  command: golangci-lint run --disable-all --enable=goimports --enable=golint --enable=govet --enable=errcheck --enable=staticcheck --timeout=5m0s ./...
                  working_directory: << parameters.working_dir >>
    build-and-push:
        executor: gcloud-executor
        parameters:
            working_dir:
                type: string
            service_name:
                type: string
        steps:
            - checkout
            - gcp-cli/initialize:
                  gcloud-service-key: GCLOUD_SERVICE_KEY
                  google-compute-zone: GOOGLE_COMPUTE_ZONE
                  google-project-id: GOOGLE_PROJECT_ID
            - setup_remote_docker:
                  docker_layer_caching: false # 使いたいが無料プランではtrueにできない
            - attach_workspace:
                  at: vendor
            - run:
                  name: build
                  command: docker build . -t gcr.io/${GOOGLE_PROJECT_ID}/<<parameters.service_name>>:${CIRCLE_SHA1}
                  working_directory: << parameters.working_dir >>
            - run:
                  name: auth
                  command: gcloud auth configure-docker
            - run:
                  name: push
                  command: docker push gcr.io/${GOOGLE_PROJECT_ID}/<<parameters.service_name>>:${CIRCLE_SHA1}
    deploy:
        executor: gcloud-executor
        parameters:
            service_name:
                type: string
            region:
                type: string
        steps:
            - checkout
            - gcp-cli/initialize:
                  gcloud-service-key: GCLOUD_SERVICE_KEY
                  google-compute-zone: GOOGLE_COMPUTE_ZONE
                  google-project-id: GOOGLE_PROJECT_ID
            - run:
                  name: deploy
                  command: gcloud run deploy <<parameters.service_name>> --image gcr.io/${GOOGLE_PROJECT_ID}/<<parameters.service_name>>:${CIRCLE_SHA1} --region <<parameters.region>> --allow-unauthenticated --platform managed

workflows:
    server:
        jobs:
            - lint:
                  name: lint-server
                  working_dir: server
                  cache_key: go-mod-server-{{ .Environment.CACHE_KEY }}-{{ checksum "server/go.mod" }}
                  cache_version: go-mod-server-{{ .Environment.CACHE_KEY }}
            - build-and-push:
                  name: build-and-push-server
                  context: gcp
                  working_dir: server
                  service_name: server
                  requires:
                      - lint-server
            - deploy:
                  name: deploy-server
                  context: gcp
                  service_name: server
                  region: us-east1
                  requires:
                      - build-and-push-server
    gateway:
        jobs:
            - lint:
                  name: lint-gateway
                  working_dir: gateway
                  cache_key: go-mod-gateway-{{ .Environment.CACHE_KEY }}-{{ checksum "gateway/go.mod" }}
                  cache_version: go-mod-gateway-{{ .Environment.CACHE_KEY }}
            - build-and-push:
                  name: build-and-push-gateway
                  context: gcp
                  working_dir: gateway
                  service_name: gateway
                  requires:
                      - lint-gateway
            - deploy:
                  name: deploy-gateway
                  context: gcp
                  service_name: gateway
                  region: us-east1
                  requires:
                      - build-and-push-gateway
